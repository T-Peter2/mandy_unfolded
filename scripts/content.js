// Letiltsuk a nemk√≠v√°natosokat egy√°ltal√°n?
var hideDisabledUsers = true;
// Ha letiltjuk, el√©g kisz√ºrk√≠teni, vagy t≈±njenek szem el≈ël?
var dimDisabledUsers = true;
// A letiltottak list√°ja
var disabledUsers = [];
// A saj√°t nev√ºnk
var ownName = '';

// Kicsomagol√°s
function unfoldReplies() {
  // Az √∂sszes m√©g eddig fel nem dolgozott "v√°lasz megtekint√©se" link
  var findReplies = document.querySelectorAll('span.show-more-text:not(.mandy-unfolded-processed)');
  for (let reply of findReplies) {
    // minden "v√°lasz megtekint√©se" linkre:
    if (reply.innerHTML.endsWith('megtekint√©se ')) {
      // jelezz√ºk a linken, hogy m√°r feldolgoztuk, hogy legk√∂zelebb m√°r ne nyomjuk meg √∫jb√≥l
      reply.classList.add('mandy-unfolded-processed');
      // elt√ºntetj√ºk mag√°t a sz√°ml√°l√≥s linket
      reply.closest('div.response-count').classList.add('mandy-unfolded-hidden');
      // megnyomjuk a linket, hogy a v√°lasz el≈ëbukkanjon
      reply.click();
    }
  }
}

// Tov√°bbi kozz√°sz√≥l√°sok bet√∂lt√©se
function loadMore() {
  // Minden els≈ëdleges gomb
  var findLoadMore = document.querySelectorAll('button.btn-primary');
  for (let button of findLoadMore) {
    // Ha ez egy "Tov√°bbiak bet√∂lt√©se" gomb, ...
    if (button.innerText === 'Tov√°bbiak bet√∂lt√©se') {
      // ...megnyomjuk
      button.click();
    }
  }
}

// Tiltott felhaszn√°l√≥k elt√ºntet√©se
function hideAllDisabledUsers() {
  // Saj√°t nev√ºnk kinyer√©se
  ownName = document.querySelector('span.font-username-bold')?.textContent.trim() ?? '';
  // Az √∂sszes m√©g fel nem dolgozott hozz√°sz√≥l√°s
  var findComments = document.querySelectorAll('man-comment-card:not(.mandy-unfolded-processed)');
  for (let comment of findComments) {
    // Jelezz√ºk a hozz√°sz√≥l√°son, hogy m√°r feldolgoztuk, hogy legk√∂zelebb m√°r ne tegy√ºk meg √∫jb√≥l
    comment.classList.add('mandy-unfolded-processed');
    // A hozz√°sz√≥l√≥ neve
    var findName = comment.querySelector('div.comment-card-name');
    var name = findName.childNodes[0].textContent.trim();
    // Ha megegyezik a saj√°t nev√ºnkkel, akkor a mi hozz√°sz√≥l√°sunk
    if (name === ownName) {
      // Saj√°t nevet kiemel≈ë st√≠lus
      findName.classList.add('mandy-unfolded-own');
      // A n√©v m√∂g√© ker√ºl a hozz√°sz√≥l√°saink k√∂z√∂tt ugr√°l√≥ gomb
      findName.after(createNextButton());
    }
    // Nem saj√°t hozz√°sz√≥l√°s
    // Ha k√©rt√ºk a tiltott felhaszn√°l√≥k letilt√°s√°t, ...
    else if (hideDisabledUsers) {
      // √©s ez a felhaszn√°l√≥ a tiltottak k√∂z√∂tt van, ...
      if (disabledUsers.includes(name)) {
        // a megfelel≈ë (kisz√ºrk√≠t≈ë vagy elt√ºntet≈ë) st√≠lus kiv√°laszt√°sa
        var disabledClass = dimDisabledUsers ? 'mandy-unfolded-dimmed' : 'mandy-unfolded-hidden';
        // √©s a st√≠lus hozz√°rendel√©se a hozz√°sz√≥l√°shoz
        comment.classList.add(disabledClass);
      }
      else {
        // nem tiltott felhaszn√°l√≥, odatessz√ºk a n√©v m√∂g√© a piros X-et, h√°tha egyszer le akarjuk tiltani
        findName.after(createDisableButton(name));
      }
    }
  }
}

// A hozz√°sz√≥l√°saink k√∂z√∂tt ugr√°l√≥ gomb l√©trehoz√°sa
function createNextButton() {
  var button = document.createElement('button');
  button.innerText = '‚ñº';
  button.classList.add('mandy-unfolded-next-comment');
  button.setAttribute('title', 'K√∂vetkez≈ë');
  button.onclick = () => nextOwnComment();
  return button;
}

// Ugr√°s a k√∂vetkez≈ë hozz√°sz√≥l√°sunkra
function nextOwnComment() {
  // Az √∂sszes olyan hozz√°sz√≥l√°s, amire m√©g nem ugrottunk r√°
  var findComments = document.querySelectorAll('man-comment-card:not(.mandy-unfolded-visited)');
  for (let comment of findComments) {
    // A hozz√°sz√≥l√≥ neve
    var findName = comment.querySelector('div.comment-card-name');
    var name = findName.childNodes[0].textContent.trim();
    // Ha megegyezik a saj√°t nev√ºnkkel, akkor a mi hozz√°sz√≥l√°sunk
    if (name === ownName) {
      // Megjel√∂lj√ºk, hogy ide m√°r ugrottunk egyszer
      comment.classList.add('mandy-unfolded-visited');
      // Behozzuk a nevet (√©s ezzel egy√ºtt mag√°t a hozz√°sz√≥l√°st) a b√∂ng√©sz≈ë k√∂zep√©re
      findName.scrollIntoView();
      return;
    }
  }
}

// Ugr√°s a legels≈ë hozz√°sz√≥l√°sunkra
function firstOwnComment() {
  // Az √∂sszes hozz√°sz√≥l√°s
  var findComments = document.querySelectorAll('man-comment-card');
  for (let comment of findComments) {
    // A hozz√°sz√≥l√≥ neve
    var findName = comment.querySelector('div.comment-card-name');
    var name = findName.childNodes[0].textContent.trim();
    // Ha megegyezik a saj√°t nev√ºnkkel, akkor a mi hozz√°sz√≥l√°sunk
    if (name === ownName) {
      // Visszaadjuk a saj√°t els≈ë hozz√°sz√≥l√°sunkat
      return comment;
    }
  }
}

// A megadott nev≈± felhaszn√°l√≥ elrejt√©se
function hideSingleUser(userName) {
  // Az √∂sszes hozz√°sz√≥l√°s
  var findComments = document.querySelectorAll('man-comment-card');
  for (let comment of findComments) {
    // A hozz√°sz√≥l√≥ neve
    var findName = comment.querySelector('div.comment-card-name');
    var name = findName.childNodes[0].textContent.trim();
    // Ha megegyezik a megadott n√©vvel, akkor ezt le akarjuk tiltani
    if (name === userName) {
      // a megfelel≈ë (kisz√ºrk√≠t≈ë vagy elt√ºntet≈ë) st√≠lus kiv√°laszt√°sa
      var disabledClass = dimDisabledUsers ? 'mandy-unfolded-dimmed' : 'mandy-unfolded-hidden';
      // √©s a st√≠lus hozz√°rendel√©se a hozz√°sz√≥l√°shoz
      comment.classList.add('mandy-unfolded-processed', disabledClass);
    }
  }
}

// A felhaszn√°l√≥ hozz√°ad√°sa a tiltottak list√°j√°hoz
function disableUser(button) {
  // A felhaszn√°l√≥ neve
  var userName = button.getAttribute('data-username');
  // Ha egy√°ltal√°n van letiltott felhaszn√°l√≥ √©s a megadottat m√©g nem tiltjuk eddig, ...
  if (disabledUsers.length == 0 || !disabledUsers.includes(userName)) {
    // * elt√ºntetj√ºk az aktu√°lis hozz√°sz√≥l√°sait,
    hideSingleUser(userName);
    // * hozz√°adjuk a letiltottak list√°j√°hoz,
    disabledUsers.push(userName);
    // * a kib≈ëv√≠tett list√°t elt√°roljuk a b√∂ng√©sz≈ëben.
    chrome.storage.local.set({ disabledUsers: JSON.stringify(disabledUsers) });
  }
}

// Letilt√≥ piros X gomb l√©trehoz√°sa
function createDisableButton(userName) {
  var button = document.createElement('button');
  button.innerText = 'üóô';
  button.classList.add('mandy-unfolded-disable-user');
  button.setAttribute('title', 'Tilt√°s');
  button.setAttribute('data-username', userName);
  button.onclick = () => disableUser(button);
  return button;
}

// √öj lila gomb a fejl√©cbe
function createHeaderButton(icon) {
  var template = document.createElement('template');
  template.innerHTML = `
  <div class='header-comments'>
    <button class='header-comments-button-desktop'>
      <i class='icon icon-mandiner-${icon}'></i>
    </button>
    <button class='header-comments-button-mobile'>
      <i class='icon icon-mandiner-${icon}'></i>
    </button>
  </div>`;
  return template.content.firstElementChild.cloneNode(true);
}

// Automatikus bejelentkez√©s
function autoLoginUser() {
  // Minden harmadlagos gomb
  var findLogin = document.querySelectorAll('button.btn-tertiary');
  for (let button of findLogin) {
    // Ha ez egy "Bejelentkez√©s" gomb, ...
    if (button.innerText === 'Bejelentkez√©s') {
      // ...megnyomjuk
      button.click();
    }
  }
}

// Rendszeres id≈ëz√≠t√©ssel megh√≠vjuk a k√∂vetkez≈ë n√©gy funcki√≥t:
//
// * 1 m√°sodpercenk√©nt a kicsomagol√°st
const unfoldInterval = setInterval(unfoldReplies, 1000);
// * 10 m√°sodpercenk√©nt a tov√°bbi hozz√°sz√≥l√°sok bet√∂lt√©s√©t
const loadMoreInterval = setInterval(loadMore, 10000);
// * 5 m√°sodpercenk√©nt a tiltott felhaszn√°l√≥k elt√ºntet√©s√©t
const hideDisabledUserInterval = setInterval(hideAllDisabledUsers, 5000);
// * 3 m√°sodpercenk√©nt az automatikus bejelentkez√©st
const autoLoginUserInterval = setInterval(autoLoginUser, 3000);

// Be√°ll√≠t√°sok bet√∂lt√©se a b√∂ng√©sz≈ëb≈ël
chrome.storage.local.get(['hideDisabledUsers', 'dimDisabledUsers', 'disabledUsers']).then((result) => {
  // Letiltjuk?
  hideDisabledUsers = result.hideDisabledUsers ?? true;
  // Kisz√ºrk√≠teni vagy elt√ºntetni?
  dimDisabledUsers = result.dimDisabledUsers ?? true;
  // Letiltottak list√°ja
  disabledUsers = JSON.parse(result.disabledUsers ?? '[]');
});

// Keres√©s gomb, ehhez k√©pest sz√∫rjuk be az √∫jakat
var searchButton = document.querySelector('div.header-search');

// Saj√°t profil gomb (h√°romvonalas ikon)
var ownButton = createHeaderButton('hamburger-user');
ownButton.onclick = () => {
  // Megnyom√°sakor erre az oldalra ugrik
  window.open('profil/hozzaszolasok');
};
// Besz√∫rjuk az √∫j gombot a Keres√©s m√∂g√©
searchButton.after(ownButton);

// Saj√°t hozz√°sz√≥l√°sok gomb (mappa ikon)
var jumpButton = createHeaderButton('folder-open-white');
jumpButton.onclick = () => {
  // Els≈ë hozz√°sz√≥l√°sunk
  var comment = firstOwnComment();
  if (comment == undefined) {
    // Ha nincs m√©g saj√°t hozz√°sz√≥l√°sunk, akkkor a kommentmez≈ë eleje
    comment = document.querySelector('app-comment-section');
  }
  // Odaugrunk a c√©lhoz
  comment.scrollIntoView();
};
// Besz√∫rjuk az √∫j gombot a Keres√©s m√∂g√©
searchButton.after(jumpButton);

window.onload = function () {
  // %kommentek az URL v√©g√©r≈ël lev√°gva
  if (location.href.endsWith("%23kommentek")) {
    const url = location.href.split('%')[0]
    window.location.replace(url);
  }
  // #kommentek az URL v√©g√©r≈ël lev√°gva
  else if (location.href.endsWith("#kommentek")) {
    const url = location.href.split('#')[0]
    window.location.replace(url);
  }
  // utm_source az URL v√©g√©r≈ël mindenest√ºl lev√°gva
  else if (location.href.includes("utm_source")) {
    const url = location.href.split('?')[0]
    window.location.replace(url);
  }
}
